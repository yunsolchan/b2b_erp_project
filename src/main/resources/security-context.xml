<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- Namespaces탭 : security 체크후 선택 > 오른쪽 4.2 버전 선택 -->
<!-- 정적리스소 파일(servlet-context.xml에 먼저 추가)에는 보안설정을 하지 않음 -->
   <security:http pattern="/resources/**" security="none" />
   <security:http pattern="/common/**" security="none" />
   <security:http pattern="/android/**" security="none" />   
   
   <security:http auto-config="true" use-expressions="true" create-session="never">

      <security:intercept-url   pattern="/**.one" access="permitAll" />
      <security:intercept-url   pattern="/**.test" access="permitAll" />
      <security:intercept-url   pattern="/**.mh" access="permitAll" />
      <security:intercept-url   pattern="/**.dh" access="permitAll" />
      <security:intercept-url   pattern="/**.hj" access="permitAll" />
      <security:intercept-url   pattern="/**.jh" access="permitAll" />
      <security:intercept-url   pattern="/**.is" access="permitAll" />
     
      <!-- 로그인한 사용자 영역(customer + 관리자) : 오류 : id가 pk므로 admin권한을 1개밖에 부여할 수 없다. -->
      
      <!-- 로그인한 사용자 영역(customer + 관리자) -->
      <!-- <security:intercept-url   pattern="/**.ad" access="hasRole('ROLE_USER', 'ROLE_ADMIN')" /> -->
      
      <!-- 로그인폼 -->
      <!-- login.do => login_check.do => UserAuthenticationService => 성공/실패/거부 -->
      <!-- 5개 설정을 소스와 일치시켜야 한다. -->
      <security:form-login login-page="/login.one"
               login-processing-url="/login_check.one"
               authentication-success-handler-ref="userLoginSuccessHandler"
               authentication-failure-handler-ref="userLoginFailureHandler"
               username-parameter="id" password-parameter="pw" />
         	<!-- 여기서는 화면에서 입력받은 값을 받고, -->
         	
      <security:session-management>
         <!-- 같은 브라우저에서 여러창 동시접속수 / 세션만료시 이동할 주소 / 최대 세션 초과시 에러 옵션-->
         <security:concurrency-control max-sessions="2" 
            expired-url="/main.one"
            error-if-maximum-exceeded="true"
         />
      </security:session-management>         
      
      <!-- 접근 권한이 없는 경우 작동 -->
      <security:access-denied-handler ref="userDeniedHandler" />
   </security:http>
   
   <!-- 로그인 성공시 작동 -->
   <bean id="userLoginSuccessHandler" class="com.spring.team_one.service.UserLoginSuccessHandler">
      <constructor-arg name="sqlSession" ref="sqlSession" /> 
   </bean>
   
   <!-- 로그인 실패시 작동 -->
   <bean id="userLoginFailureHandler" class="com.spring.team_one.service.UserLoginFailureHandler">
      <constructor-arg name="sqlSession" ref="sqlSession" />
      <constructor-arg name="passwordEncoder" ref="bcryptPasswordEncoder" /> 
   </bean>
   
   <!-- 접근 권한이 없는 경우 작동 -->
   <bean id="userDeniedHandler" class="com.spring.team_one.service.UserDeniedHandler" />
   
   <!-- 로그인 인증처리 클래스 -->
   <!-- login-processing-url="/login_check.do"에 의해 자동호출  -->
   <bean id="userService" class="com.spring.team_one.service.UserAuthenticationService">
      <constructor-arg name="sqlSession" ref="sqlSession" />
   </bean>
   
   <!-- 비밀번호 암호화 클래스 -->
   <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
</beans>